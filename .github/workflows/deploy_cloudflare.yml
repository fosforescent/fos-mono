name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
      - dev
    # paths:
    #   - 'client/**'
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: 'choice'
        options:
          - dev
          - prod

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-build-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true  

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          submodules: true
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'
  

      # Dynamically set environment variables based on the branch
      # make it verbose
      - name: Set environment variables
        run: |
          if { [ "${{github.ref}}" == "refs/heads/main" ] && [ "${{github.event_name}}" == "push" ]; } || { [ "${{github.event_name}}" == "workflow_dispatch" ] && [ "${{inputs.environment}}" == "prod" ]; }; then
            echo "FOS_API_URL=https://api.fosforescent.com" >> $GITHUB_ENV
            # Set any other production-specific variables here
          else
            echo "FOS_API_URL=https://api.dev.fosforescent.com" >> $GITHUB_ENV
            # Set any other development-specific variables here
          fi

  
      - name: Install dependencies
        run: make setup
  
      - name: Build app
        run: make build
        env:
          NODE_ENV: production
          FOS_API_URL: ${{ env.FOS_API_URL }}
        
      - name: Check if build folder exists
        run: ls -la ./build
  
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        id: cloudflare_deploy
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          projectName: 'fos-prod'
          directory: ./build
          branch: ${{ ((github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && inputs.environment == 'prod')) && 'main' || 'dev'  }}
          wranglerVersion: "3"
          
      - name: Write URL to a file
        run: echo "${{ steps.cloudflare_deploy.outputs.url }}" > url.txt
  
      - name: Upload URL as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: deployment-url
          path: url.txt
          if-no-files-found: error
          overwrite: true
      

